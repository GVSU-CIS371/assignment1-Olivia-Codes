html, body { /*css selector that targets <html> and <body
  This is for the css styles that should impact the entire page
  */
  height: 100%; /*sets an element height to 100 % of it's parent containers height*/
  margin: 0; /*sets the space outside an elements border to zero px on all 4 sides*/
  padding: 0; /*padding is space between element content and border*/ 
  overflow-x: hidden; /*for horizonal, hide any part of element that doesn't fit in screen width*/ 
}

#app { /*corresponds to div id*/ 
  min-height: 100vh; /*element will have min height of 100% of the viewports height, 
  actual height can be greater than this
  viewport height is a css unit that define the height of an element as a 
  percent of the users browser windows visible area, so we pretty much wanna take up 
  100 percent of visible screen with this app*/ 
  display: grid; /*making this a grid container, meaning direct children become
  grid items and are arranged in 2 dimensional grid with rows/columns
  Layout is specified next*/ 
  grid-template-rows: auto 1fr auto; /*3 rows, auto to header size, 1fr is rest of free space for main, auto for footer row*/
}

header {
  display: flex; /*default would be block and stacked vertically, we want horizonatl*/
  justify-content: space-between; /* push h1 to left and nav links to right*/
  align-items: center; /*center elements horizontally*/ 
  padding: 0 15px; /*first number is top and bottom = 0, second applies to right and left 20x*/ 
}



main {

  padding: 20px; /*all 4 sides 20px between element and border*/  
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 even columns*/
  gap: 20px; /*20px gap horizonal and vertical around grid elements*/
  align-content: start; /*pushes rows right to edge*/
}


footer {
  padding: 15px 20px;
  text-align: center;
}
